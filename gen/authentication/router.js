// Generated by CoffeeScript 1.9.0
(function() {
  var express, path, router, service;

  express = require('express');

  path = require('path');

  service = require('./auth-service');

  router = express.Router();

  router.use(express["static"](path.join(__dirname, 'client')));

  router.use('/rest/getLogin', function(req, res, next) {
    var _ref;
    return res.json({
      user: (_ref = req.session) != null ? _ref.appuser : void 0
    });
  });

  router.use('/rest/login', function(req, res, next) {
    var e;
    try {
      return service.login(req.body.username, req.body.password, function(err, user) {
        if (!err && user) {
          req.session.appuser = user;
        }
        return res.json({
          error: err,
          user: user
        });
      });
    } catch (_error) {
      e = _error;
      return res.json({
        error: e
      });
    }
  });

  router.use('/rest/logout', function(req, res, next) {
    delete req.session.appuser;
    return res.send('ok');
  });

  router.use('/rest/signup', function(req, res, next) {
    return service.signup(req.body.user, function(err, user) {
      return res.json({
        error: err,
        user: user
      });
    });
  });

  router.use('/rest/activateAccount', function(req, res, next) {
    var code;
    code = req.query.code;
    return service.activateUser(code, function(err) {
      return res.json({
        error: err
      });
    });
  });

  router.use('/rest/requestPasswordReset', function(req, res, next) {
    return service.requestPasswordReset(req.body.email, function(err) {
      return res.json({
        error: err
      });
    });
  });

  router.use('/rest/resetPassword', function(req, res, next) {
    return service.resetPassword(req.query.code, function(err, user) {
      if (err) {
        return res.redirect("reset-password-error.html");
      } else {
        req.session.appuser = user;
        return res.redirect("/#/change-password");
      }
    });
  });

  router.use('/rest/changePassword', function(req, res, next) {
    var password, user;
    user = req.session.appuser;
    if (!user) {
      return res.send("NOT AUTHENTICATED");
    } else {
      password = req.body.password;
      return service.changePassword(user, password, function(err) {
        return res.json({
          error: err
        });
      });
    }
  });

  module.exports = router;

}).call(this);
