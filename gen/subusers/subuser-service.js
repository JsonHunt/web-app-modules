// Generated by CoffeeScript 1.9.1
(function() {
  var FastBricks, SubuserService, async, emailjs, fb, sql, uuid, xdate;

  sql = require('sql-bricks');

  FastBricks = require('fast-bricks');

  emailjs = require("emailjs/email");

  uuid = require('node-uuid');

  async = require('async');

  xdate = require('xdate');

  fb = new FastBricks();

  fb.loadConfig('database-config.cson');

  SubuserService = (function() {
    function SubuserService() {}

    SubuserService.prototype.getUsers = function(filters, callback) {
      var expr;
      expr = sql.select().from('user');
      if (filters) {
        expr.where(filters);
      }
      return fb.query(expr, callback);
    };

    SubuserService.prototype.getUser = function(id, callback) {
      return fb.query(sql.select().from('user').where({
        id: id
      }), callback);
    };

    SubuserService.prototype.suspendUser = function(id, reason, callback) {
      return fb.query(sql.update('user', {
        suspended: true,
        suspension_reason: reason
      }).where({
        id: id
      }), callback);
    };

    SubuserService.prototype.unsuspendUser = function(id, reason, callback) {
      return fb.query(sql.update('user', {
        suspended: false,
        suspension_reason: reason
      }).where({
        id: id
      }), callback);
    };

    SubuserService.prototype.getStats = function(callback) {
      var weekago;
      weekago = new xdate(new Date());
      weekago.addDays(-7);
      return async.parallel([
        function(cb) {
          return fb.query(sql.select('count *').from('user'), cb);
        }, function(cb) {
          return fb.query(sql.select('count *').from('user').where({
            verified: true
          }), cb);
        }, function(cb) {
          return fb.query(sql.select('count *').from('user').where({
            suspended: true
          }), cb);
        }, function(cb) {
          return fb.query(sql.select('count *').from('user').where(sql.gt({
            date_registered: weekago.toDate()
          })), cb);
        }, function(cb) {
          return fb.query(sql.select('sum (amount)').from('payment').where(sql.gt({
            date_paid: weekago.toDate()
          })), cb);
        }
      ], function(err, results) {
        var stats;
        if (!err) {
          stats = {
            total: results[0][0],
            verified: results[1][0],
            suspended: results[2][0],
            registered_7_days: results[3][0],
            payment_7_days: results[4][0]
          };
        }
        return callback(err, stats);
      });
    };

    return SubuserService;

  })();

  module.exports = new SubuserService();

}).call(this);
