// Generated by CoffeeScript 1.9.1
(function() {
  var LoadBalanceController;

  module.exports = LoadBalanceController = function($scope, $http, $modalInstance) {
    setTimeout(function() {
      return $('.amount').focus();
    }, 100);
    $scope.doPay = function() {
      var handler;
      if (!$scope.amount || $scope.amount.length === 0) {
        $scope.error = "Amount is required";
        return;
      }
      if (isNaN($scope.amount)) {
        $scope.error = "Amount must be a number";
        return;
      }
      delete $scope.error;
      handler = StripeCheckout.configure({
        key: 'pk_test_6pRNASCoBOKtIshFeQd4XMUh',
        image: '/img/documentation/checkout/marketplace.png',
        token: function(token) {
          return $http.post("module/payment/loadBalance", {
            token: token
          }).success(function(data, status, headers, config) {
            $scope.error = data.error;
            if (!$scope.error) {
              return $scope.confirmed = true;
            }
          }).error(function(data, status, headers, config) {
            return $scope.error = data;
          });
        }
      });
      return handler.open({
        name: 'Webapp',
        description: 'Webapp subscription',
        amount: $scope.amount
      });
    };
    $scope.cancel = function() {
      return $modalInstance.close();
    };
    return $scope.close = function() {
      return $modalInstance.close();
    };
  };

  LoadBalanceController.$inject = ['$scope', '$http', '$modalInstance'];

}).call(this);
